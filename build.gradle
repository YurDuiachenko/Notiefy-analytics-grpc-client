plugins {
    id 'java'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.springframework.boot' version '3.3.4'
    id 'com.google.protobuf' version '0.9.2' // Плагин для работы с protobuf
}

group 'com.example.grpc'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'io.grpc:grpc-netty-shaded:1.56.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'io.grpc:grpc-protobuf:1.56.0'
    implementation 'io.grpc:grpc-stub:1.56.0'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.postgresql:postgresql:42.7.2'
    implementation 'org.modelmapper:modelmapper:3.2.0'
    implementation 'com.clickhouse:clickhouse-jdbc:0.6.5:all'
    implementation 'com.clickhouse:client-v2:0.6.5'
    implementation 'org.modelmapper:modelmapper:3.2.0'
    implementation files('D:\\IdeaProjects\\Notiefy-grpc-api\\build\\libs\\Notiefy-grpc-api-1.0-SNAPSHOT.jar')

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.boot:spring-boot-starter'
    // Зависимость для protobuf
    implementation 'com.google.protobuf:protobuf-java:3.24.0'
    implementation 'org.projectlombok:lombok:1.18.28'
    implementation 'org.testng:testng:7.1.0'

    testImplementation 'junit:junit:4.13.2'   // Зависимость для тестов
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.24.0"   // Версия protoc компилятора
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.56.0'  // Для генерации gRPC кода
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                grpc {}
            }
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/java', 'build/generated/source/proto/main/grpc'
        }
    }
}